<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:webflow="http://www.springframework.org/schema/webflow-config"
           xmlns:faces="http://www.springframework.org/schema/faces"
           xsi:schemaLocation="
                        http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/webflow-config
                        http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd
                        http://www.springframework.org/schema/faces
                        http://www.springframework.org/schema/faces/spring-faces-2.4.xsd">
                        
        
    <!-- Create a new JPA flow execution listener using given JPA Entity Manager factory. 
         Create a new persistence context when a new flow execution with the 'persistenceContext' attribute starts, Load some 
         objects into this persistence context Perform edits to those objects over a series of requests into the flow-->    
        
        <bean id="jpaFlowExecutionListener" class="org.springframework.webflow.persistence.JpaFlowExecutionListener">
                <constructor-arg ref="entityManagerFactory" />
                <constructor-arg ref="transactionManager" />
        </bean>
        
   <!-- A FlowExecutionListener that creates a FlowFacesContext instance when a flow request is submitted and releases it when the request has been processed. -->
        
        <bean id="facesContextListener" class="org.springframework.faces.webflow.FlowFacesContextLifecycleListener" />
        
        
    <!-- The flow executor is the core Web Flow configuration element. -->    
        
        <webflow:flow-executor id="flowExecutor">
                <webflow:flow-execution-listeners>
                        <webflow:listener ref="jpaFlowExecutionListener" />
                        <webflow:listener ref="facesContextListener"/>
                        <webflow:listener ref="securityFlowExecutionListener"/>
                </webflow:flow-execution-listeners>
        </webflow:flow-executor>                        

    <!-- The flow-registry contains a set of flow-locations. Every flow definition used by Web Flow must be added to the registry.  -->    
        
        <webflow:flow-registry id="flowRegistry" flow-builder-services="facesFlowBuilderServices" base-path="/WEB-INF/flows">
                <webflow:flow-location-pattern value="/**/*-flow.xml" />
        </webflow:flow-registry>
        
    <!-- Plugs in a custom creator for Web Flow views -->
        
        <faces:flow-builder-services id="facesFlowBuilderServices" development="true" />
        <faces:resources />
        
    <!-- Implementation of HandlerMapping that follows a simple convention for creating URL path mappings from the ids of registered 
    	 flow definitions. -->    
        
        <bean class="org.springframework.webflow.mvc.servlet.FlowHandlerMapping">
                <property name="order" value="1"/>
                <property name="flowRegistry" ref="flowRegistry" />
                <property name="defaultHandler">
                        <bean class="org.springframework.web.servlet.mvc.UrlFilenameViewController" />
                </property>
        </bean>
        
    <!-- An extension of FlowHandlerAdapter that replaces the default AjaxHandler instance with a JsfAjaxHandler assuming JSF 2 is the 
    	 runtime environment. -->    
        <bean class="org.springframework.faces.webflow.JsfFlowHandlerAdapter">
                <property name="flowExecutor" ref="flowExecutor" />
        </bean>
    
    <!--  This is useful if your symbolic names match the names of your view resources in a straightforward manner (i.e. the symbolic 
    	  name is the unique part of the resource's filename), without the need for a dedicated mapping to be defined for each view. -->    
        
        <bean id="faceletsViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
                <property name="viewClass" value="org.springframework.faces.mvc.JsfView"/>
                <property name="prefix" value="/WEB-INF/" />
                <property name="suffix" value=".xhtml" />
        </bean>
    
    <!-- do the job of the Forwarding the Request from the Dispatcher to the Controller object. -->
    <!-- Enables plain Controllers -->    
        
        <bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter" />
        
        <bean id="securityFlowExecutionListener" class="org.springframework.webflow.security.SecurityFlowExecutionListener" />

</beans>